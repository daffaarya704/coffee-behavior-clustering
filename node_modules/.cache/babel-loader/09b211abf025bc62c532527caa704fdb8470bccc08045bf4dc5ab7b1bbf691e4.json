{"ast":null,"code":"var _jsxFileName = \"E:\\\\Daffa\\\\new project\\\\Coffee Sales\\\\src\\\\CoffeeDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatMoney(n) {\n  if (!isFinite(n)) return '$0';\n  return '$' + n.toLocaleString(undefined, {\n    maximumFractionDigits: 2\n  });\n}\nexport default function CoffeeDashboard() {\n  _s();\n  const [raw, setRaw] = useState([]);\n  const [coffee, setCoffee] = useState('All');\n  const [minMonth, setMinMonth] = useState(1);\n  const [maxMonth, setMaxMonth] = useState(12);\n\n  // load excel\n  useEffect(() => {\n    fetch('/Coffee_Sales_Cleaned.xlsx').then(r => r.arrayBuffer()).then(ab => {\n      const wb = XLSX.read(ab, {\n        type: 'array'\n      });\n      const ws = wb.Sheets[wb.SheetNames[0]];\n      const json = XLSX.utils.sheet_to_json(ws);\n      setRaw(json);\n    }).catch(e => console.error('Excel load error', e));\n  }, []);\n\n  // normalize + filter\n  const data = useMemo(() => {\n    return raw.map(d => {\n      var _ref, _d$Sales_amount, _ref2, _ref3, _d$Monthsort, _ref4, _ref5, _d$coffee_name, _ref6, _ref7, _d$transaction_id, _ref8, _ref9, _d$Time_of_Day;\n      const salesRaw = ((_ref = (_d$Sales_amount = d.Sales_amount) !== null && _d$Sales_amount !== void 0 ? _d$Sales_amount : d.sales_amount) !== null && _ref !== void 0 ? _ref : '').toString();\n      const sales = parseFloat(salesRaw.replace(/[$,\\s]/g, '')) || 0;\n      const Monthsort = Number((_ref2 = (_ref3 = (_d$Monthsort = d.Monthsort) !== null && _d$Monthsort !== void 0 ? _d$Monthsort : d.monthsort) !== null && _ref3 !== void 0 ? _ref3 : d.Month) !== null && _ref2 !== void 0 ? _ref2 : 0);\n      const coffee_name = (_ref4 = (_ref5 = (_d$coffee_name = d.coffee_name) !== null && _d$coffee_name !== void 0 ? _d$coffee_name : d.Coffee) !== null && _ref5 !== void 0 ? _ref5 : d.coffee) !== null && _ref4 !== void 0 ? _ref4 : '';\n      const transaction_id = (_ref6 = (_ref7 = (_d$transaction_id = d.transaction_id) !== null && _d$transaction_id !== void 0 ? _d$transaction_id : d.transactio_id) !== null && _ref7 !== void 0 ? _ref7 : d.id) !== null && _ref6 !== void 0 ? _ref6 : '';\n      const Time_of_Day = (_ref8 = (_ref9 = (_d$Time_of_Day = d.Time_of_Day) !== null && _d$Time_of_Day !== void 0 ? _d$Time_of_Day : d.time_of_day) !== null && _ref9 !== void 0 ? _ref9 : d.Time) !== null && _ref8 !== void 0 ? _ref8 : '';\n      return {\n        sales,\n        Monthsort,\n        coffee_name,\n        transaction_id,\n        Time_of_Day\n      };\n    });\n  }, [raw]);\n  const coffeeOptions = useMemo(() => {\n    const set = new Set(data.map(d => d.coffee_name).filter(Boolean));\n    return ['All', ...Array.from(set).sort()];\n  }, [data]);\n  const filtered = useMemo(() => {\n    return data.filter(d => {\n      const coffeeOk = coffee === 'All' || d.coffee_name === coffee;\n      const monthOk = d.Monthsort >= minMonth && d.Monthsort <= maxMonth;\n      return coffeeOk && monthOk;\n    });\n  }, [data, coffee, minMonth, maxMonth]);\n\n  // KPIs\n  const totalSales = useMemo(() => filtered.reduce((s, d) => s + d.sales, 0), [filtered]);\n  const totalTransactions = useMemo(() => new Set(filtered.map(d => d.transaction_id)).size, [filtered]);\n  const avgValue = totalTransactions ? totalSales / totalTransactions : 0;\n\n  // Sales by Time of Day\n  const timeSlots = ['Morning', 'Afternoon', 'Night'];\n  const salesByTime = useMemo(() => {\n    return timeSlots.map(slot => {\n      const slotSales = filtered.filter(d => d.Time_of_Day === slot).reduce((s, d) => s + d.sales, 0);\n      return {\n        Time_of_Day: slot,\n        Sales: Number(slotSales.toFixed(2))\n      };\n    });\n  }, [filtered]);\n  const peakTime = useMemo(() => {\n    var _sorted$;\n    const sorted = [...salesByTime].sort((a, b) => b.Sales - a.Sales);\n    return ((_sorted$ = sorted[0]) === null || _sorted$ === void 0 ? void 0 : _sorted$.Time_of_Day) || '-';\n  }, [salesByTime]);\n\n  // Top 3 overall\n  const top3Overall = useMemo(() => {\n    const map = new Map();\n    for (const r of filtered) {\n      map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n    }\n    return Array.from(map.entries()).map(([name, total]) => ({\n      name,\n      total: Number(total.toFixed(2))\n    })).sort((a, b) => b.total - a.total).slice(0, 3);\n  }, [filtered]);\n\n  // Top 3 per time slot (for 3 mini charts)\n  const top3BySlot = useMemo(() => {\n    const res = {};\n    for (const slot of timeSlots) {\n      const map = new Map();\n      for (const r of filtered.filter(d => d.Time_of_Day === slot)) {\n        map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n      }\n      const arr = Array.from(map.entries()).map(([name, total]) => ({\n        name,\n        total: Number(total.toFixed(2))\n      })).sort((a, b) => b.total - a.total).slice(0, 3);\n      res[slot] = arr;\n    }\n    return res;\n  }, [filtered]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 min-h-screen space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-amber-900\",\n      children: \"Coffee Behavior Clustering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm opacity-70\",\n          children: \"Total Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi\",\n          children: formatMoney(totalSales)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm opacity-70\",\n          children: \"Total Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi\",\n          children: totalTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm opacity-70\",\n          children: \"Avg Sales Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi\",\n          children: formatMoney(avgValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm opacity-70\",\n          children: \"Peak Time of Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi\",\n          children: peakTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 89\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row gap-6 items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2 items-start w-full md:w-1/3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: \"Coffee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"border rounded-xl p-2 w-full\",\n            value: coffee,\n            onChange: e => setCoffee(e.target.value),\n            children: coffeeOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: opt,\n              children: opt\n            }, opt, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-3 w-full md:w-2/3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium\",\n              children: \"Month Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [\"From \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: minMonth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 46\n              }, this), \" to \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: maxMonth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-xs w-20\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"12\",\n                step: \"1\",\n                value: minMonth,\n                onChange: e => setMinMonth(Math.min(Number(e.target.value), maxMonth)),\n                className: \"w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-xs w-20\",\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"12\",\n                step: \"1\",\n                value: maxMonth,\n                onChange: e => setMaxMonth(Math.max(Number(e.target.value), minMonth)),\n                className: \"w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl mb-2\",\n        children: \"Sales by Time of Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: 320\n        },\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: salesByTime,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"Time_of_Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"Sales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-2\",\n          children: \"Top 3 Coffee Sales (Filtered)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Coffee Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Sales\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: top3Overall.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: r.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatMoney(r.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 46\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-4\",\n          children: \"Time-of-Day Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time of Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sales\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Transactions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 58\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Avg / Txn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: ['Morning', 'Afternoon', 'Night'].map(slot => {\n              const slotRows = filtered.filter(d => d.Time_of_Day === slot);\n              const s = slotRows.reduce((a, b) => a + b.sales, 0);\n              const t = new Set(slotRows.map(d => d.transaction_id)).size;\n              const avg = t ? s / t : 0;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: slot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatMoney(s)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 54\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: t\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 79\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatMoney(avg)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 91\n                }, this)]\n              }, slot, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-3 gap-4\",\n      children: timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-2\",\n          children: [slot, \": Top 3 Best Sellers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: 240\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: top3BySlot[slot],\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, slot, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"text-xs opacity-60 pt-4\",\n      children: \"All visuals react to filters in real time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(CoffeeDashboard, \"5JTEHAu/xehh48omirl9CELMgZg=\");\n_c = CoffeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"CoffeeDashboard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","XLSX","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","formatMoney","n","isFinite","toLocaleString","undefined","maximumFractionDigits","CoffeeDashboard","_s","raw","setRaw","coffee","setCoffee","minMonth","setMinMonth","maxMonth","setMaxMonth","fetch","then","r","arrayBuffer","ab","wb","read","type","ws","Sheets","SheetNames","json","utils","sheet_to_json","catch","e","console","error","data","map","d","_ref","_d$Sales_amount","_ref2","_ref3","_d$Monthsort","_ref4","_ref5","_d$coffee_name","_ref6","_ref7","_d$transaction_id","_ref8","_ref9","_d$Time_of_Day","salesRaw","Sales_amount","sales_amount","toString","sales","parseFloat","replace","Monthsort","Number","monthsort","Month","coffee_name","Coffee","transaction_id","transactio_id","id","Time_of_Day","time_of_day","Time","coffeeOptions","set","Set","filter","Boolean","Array","from","sort","filtered","coffeeOk","monthOk","totalSales","reduce","s","totalTransactions","size","avgValue","timeSlots","salesByTime","slot","slotSales","Sales","toFixed","peakTime","_sorted$","sorted","a","b","top3Overall","Map","get","entries","name","total","slice","top3BySlot","res","arr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","opt","min","max","step","Math","style","width","height","dataKey","i","slotRows","t","avg","_c","$RefreshReg$"],"sources":["E:/Daffa/new project/Coffee Sales/src/CoffeeDashboard.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\n\nfunction formatMoney(n) {\n  if (!isFinite(n)) return '$0';\n  return '$' + n.toLocaleString(undefined, { maximumFractionDigits: 2 });\n}\n\nexport default function CoffeeDashboard() {\n  const [raw, setRaw] = useState([]);\n  const [coffee, setCoffee] = useState('All');\n  const [minMonth, setMinMonth] = useState(1);\n  const [maxMonth, setMaxMonth] = useState(12);\n\n  // load excel\n  useEffect(() => {\n    fetch('/Coffee_Sales_Cleaned.xlsx')\n      .then((r) => r.arrayBuffer())\n      .then((ab) => {\n        const wb = XLSX.read(ab, { type: 'array' });\n        const ws = wb.Sheets[wb.SheetNames[0]];\n        const json = XLSX.utils.sheet_to_json(ws);\n        setRaw(json);\n      })\n      .catch((e) => console.error('Excel load error', e));\n  }, []);\n\n  // normalize + filter\n  const data = useMemo(() => {\n    return raw.map((d) => {\n      const salesRaw = (d.Sales_amount ?? d.sales_amount ?? '').toString();\n      const sales = parseFloat(salesRaw.replace(/[$,\\s]/g, '')) || 0;\n      const Monthsort = Number(d.Monthsort ?? d.monthsort ?? d.Month ?? 0);\n      const coffee_name = d.coffee_name ?? d.Coffee ?? d.coffee ?? '';\n      const transaction_id = d.transaction_id ?? d.transactio_id ?? d.id ?? '';\n      const Time_of_Day = d.Time_of_Day ?? d.time_of_day ?? d.Time ?? '';\n      return { sales, Monthsort, coffee_name, transaction_id, Time_of_Day };\n    });\n  }, [raw]);\n\n  const coffeeOptions = useMemo(() => {\n    const set = new Set(data.map(d => d.coffee_name).filter(Boolean));\n    return ['All', ...Array.from(set).sort()];\n  }, [data]);\n\n  const filtered = useMemo(() => {\n    return data.filter(d => {\n      const coffeeOk = coffee === 'All' || d.coffee_name === coffee;\n      const monthOk = d.Monthsort >= minMonth && d.Monthsort <= maxMonth;\n      return coffeeOk && monthOk;\n    });\n  }, [data, coffee, minMonth, maxMonth]);\n\n  // KPIs\n  const totalSales = useMemo(() => filtered.reduce((s, d) => s + d.sales, 0), [filtered]);\n  const totalTransactions = useMemo(() => new Set(filtered.map(d => d.transaction_id)).size, [filtered]);\n  const avgValue = totalTransactions ? totalSales / totalTransactions : 0;\n\n  // Sales by Time of Day\n  const timeSlots = ['Morning', 'Afternoon', 'Night'];\n  const salesByTime = useMemo(() => {\n    return timeSlots.map(slot => {\n      const slotSales = filtered.filter(d => d.Time_of_Day === slot).reduce((s, d) => s + d.sales, 0);\n      return { Time_of_Day: slot, Sales: Number(slotSales.toFixed(2)) };\n    });\n  }, [filtered]);\n\n  const peakTime = useMemo(() => {\n    const sorted = [...salesByTime].sort((a,b) => b.Sales - a.Sales);\n    return sorted[0]?.Time_of_Day || '-';\n  }, [salesByTime]);\n\n  // Top 3 overall\n  const top3Overall = useMemo(() => {\n    const map = new Map();\n    for (const r of filtered) {\n      map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n    }\n    return Array.from(map.entries())\n      .map(([name, total]) => ({ name, total: Number(total.toFixed(2)) }))\n      .sort((a,b) => b.total - a.total)\n      .slice(0,3);\n  }, [filtered]);\n\n  // Top 3 per time slot (for 3 mini charts)\n  const top3BySlot = useMemo(() => {\n    const res = {};\n    for (const slot of timeSlots) {\n      const map = new Map();\n      for (const r of filtered.filter(d => d.Time_of_Day === slot)) {\n        map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n      }\n      const arr = Array.from(map.entries())\n        .map(([name, total]) => ({ name, total: Number(total.toFixed(2)) }))\n        .sort((a,b) => b.total - a.total)\n        .slice(0,3);\n      res[slot] = arr;\n    }\n    return res;\n  }, [filtered]);\n\n  return (\n    <div className=\"p-6 min-h-screen space-y-6\">\n      <h1 className=\"text-3xl font-bold text-amber-900\">Coffee Behavior Clustering</h1>\n\n      {/* KPIs */}\n      <div className=\"grid md:grid-cols-4 gap-4\">\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Total Sales</div><div className=\"kpi\">{formatMoney(totalSales)}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Total Transactions</div><div className=\"kpi\">{totalTransactions}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Avg Sales Value</div><div className=\"kpi\">{formatMoney(avgValue)}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Peak Time of Day</div><div className=\"kpi\">{peakTime}</div></div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"card\">\n        <div className=\"flex flex-col md:flex-row gap-6 items-center justify-between\">\n          {/* Coffee */}\n          <div className=\"flex flex-col gap-2 items-start w-full md:w-1/3\">\n            <label className=\"text-sm font-medium\">Coffee Name</label>\n            <select\n              className=\"border rounded-xl p-2 w-full\"\n              value={coffee}\n              onChange={(e)=>setCoffee(e.target.value)}\n            >\n              {coffeeOptions.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n            </select>\n          </div>\n          {/* Month range */}\n          <div className=\"flex flex-col gap-3 w-full md:w-2/3\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium\">Month Range</span>\n              <span className=\"text-sm\">From <b>{minMonth}</b> to <b>{maxMonth}</b></span>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-xs w-20\">Start</label>\n                <input type=\"range\" min=\"1\" max=\"12\" step=\"1\" value={minMonth}\n                  onChange={(e)=> setMinMonth(Math.min(Number(e.target.value), maxMonth))}\n                  className=\"w-full\"/>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-xs w-20\">End</label>\n                <input type=\"range\" min=\"1\" max=\"12\" step=\"1\" value={maxMonth}\n                  onChange={(e)=> setMaxMonth(Math.max(Number(e.target.value), minMonth))}\n                  className=\"w-full\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Sales by Time of Day */}\n      <div className=\"card\">\n        <h2 className=\"text-xl mb-2\">Sales by Time of Day</h2>\n        <div style={{ width: '100%', height: 320 }}>\n          <ResponsiveContainer>\n            <BarChart data={salesByTime}>\n              <XAxis dataKey=\"Time_of_Day\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"Sales\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n      {/* Top 3 Overall + Tables per slot */}\n      <div className=\"grid md:grid-cols-2 gap-4\">\n        <div className=\"card\">\n          <h2 className=\"text-lg mb-2\">Top 3 Coffee Sales (Filtered)</h2>\n          <table className=\"table\">\n            <thead><tr><th>Coffee Name</th><th>Total Sales</th></tr></thead>\n            <tbody>\n              {top3Overall.map((r, i) => (\n                <tr key={i}><td>{r.name}</td><td>{formatMoney(r.total)}</td></tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"card\">\n          <h2 className=\"text-lg mb-4\">Time-of-Day Metrics</h2>\n          <table className=\"table\">\n            <thead><tr><th>Time of Day</th><th>Sales</th><th>Transactions</th><th>Avg / Txn</th></tr></thead>\n            <tbody>\n              {['Morning','Afternoon','Night'].map(slot => {\n                const slotRows = filtered.filter(d => d.Time_of_Day === slot);\n                const s = slotRows.reduce((a,b)=>a+b.sales, 0);\n                const t = new Set(slotRows.map(d=>d.transaction_id)).size;\n                const avg = t? s/t : 0;\n                return <tr key={slot}><td>{slot}</td><td>{formatMoney(s)}</td><td>{t}</td><td>{formatMoney(avg)}</td></tr>\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Three small charts: top 3 per time slot */}\n      <div className=\"grid md:grid-cols-3 gap-4\">\n        {timeSlots.map(slot => (\n          <div key={slot} className=\"card\">\n            <h3 className=\"mb-2\">{slot}: Top 3 Best Sellers</h3>\n            <div style={{ width: '100%', height: 240 }}>\n              <ResponsiveContainer>\n                <BarChart data={top3BySlot[slot]}>\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"total\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <footer className=\"text-xs opacity-60 pt-4\">All visuals react to filters in real time.</footer>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}