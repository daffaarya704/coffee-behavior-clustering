{"ast":null,"code":"var _jsxFileName = \"E:\\\\Daffa\\\\new project\\\\Coffee Sales\\\\src\\\\CoffeeDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n// ðŸŽ¨ Harmonized Coffee Color Palette\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst coffeeColors = {\n  \"Americano\": \"#6F4E37\",\n  // deep espresso brown\n  \"Americano with Milk\": \"#A67B5B\",\n  // warm latte tone\n  \"Cappuccino\": \"#C4A484\",\n  // beige cappuccino foam\n  \"Cocoa\": \"#D2691E\",\n  // chocolate\n  \"Cortado\": \"#C68642\",\n  // caramel gold\n  \"Espresso\": \"#3E2723\",\n  // darkest roast\n  \"Hot Chocolate\": \"#8B4513\",\n  // rich cocoa\n  \"Latte\": \"#EED8AE\" // light milky beige\n};\nfunction formatMoney(n) {\n  if (!isFinite(n)) return '$0';\n  return '$' + n.toLocaleString(undefined, {\n    maximumFractionDigits: 2\n  });\n}\nexport default function CoffeeDashboard() {\n  _s();\n  const [raw, setRaw] = useState([]);\n  const [coffee, setCoffee] = useState('All');\n  const [minMonth, setMinMonth] = useState(1);\n  const [maxMonth, setMaxMonth] = useState(12);\n\n  // load excel\n  useEffect(() => {\n    fetch('/Coffee_Sales_Cleaned.xlsx').then(r => r.arrayBuffer()).then(ab => {\n      const wb = XLSX.read(ab, {\n        type: 'array'\n      });\n      const ws = wb.Sheets[wb.SheetNames[0]];\n      const json = XLSX.utils.sheet_to_json(ws);\n      setRaw(json);\n    }).catch(e => console.error('Excel load error', e));\n  }, []);\n\n  // normalize + filter\n  const data = useMemo(() => {\n    return raw.map(d => {\n      const get = keys => keys.map(k => d[k]).find(v => v !== undefined && v !== null) || '';\n      const salesRaw = get(['Sales_amount', 'sales_amount', 'Sales Amount']);\n      const sales = parseFloat(salesRaw.toString().replace(/[$,\\\\s]/g, '')) || 0;\n      const Monthsort = Number(get(['Monthsort', 'Month Sort', 'monthsort', 'Month']));\n      const coffee_name = get(['coffee_name', 'Coffee Name', 'coffee']);\n      const transaction_id = get(['transaction_id', 'Transaction ID', 'transactio_id', 'id']);\n      const Time_of_Day = get(['Time_of_Day', 'Time of Day', 'time_of_day', 'Time']);\n      return {\n        sales,\n        Monthsort,\n        coffee_name,\n        transaction_id,\n        Time_of_Day\n      };\n    });\n  }, [raw]);\n  const coffeeOptions = useMemo(() => {\n    const set = new Set(data.map(d => d.coffee_name).filter(Boolean));\n    return ['All', ...Array.from(set).sort()];\n  }, [data]);\n  const filtered = useMemo(() => {\n    return data.filter(d => {\n      const coffeeOk = coffee === 'All' || d.coffee_name === coffee;\n      const monthOk = d.Monthsort >= minMonth && d.Monthsort <= maxMonth;\n      return coffeeOk && monthOk;\n    });\n  }, [data, coffee, minMonth, maxMonth]);\n\n  // KPIs\n  const totalSales = useMemo(() => filtered.reduce((s, d) => s + d.sales, 0), [filtered]);\n  const totalTransactions = useMemo(() => new Set(filtered.map(d => d.transaction_id)).size, [filtered]);\n  const avgValue = totalTransactions ? totalSales / totalTransactions : 0;\n\n  // Sales by Time of Day\n  const timeSlots = ['Morning', 'Afternoon', 'Night'];\n  const salesByTime = useMemo(() => {\n    return timeSlots.map(slot => {\n      const slotSales = filtered.filter(d => d.Time_of_Day === slot).reduce((s, d) => s + d.sales, 0);\n      return {\n        Time_of_Day: slot,\n        Sales: Number(slotSales.toFixed(2))\n      };\n    });\n  }, [filtered]);\n  const peakTime = useMemo(() => {\n    var _sorted$;\n    const sorted = [...salesByTime].sort((a, b) => b.Sales - a.Sales);\n    return ((_sorted$ = sorted[0]) === null || _sorted$ === void 0 ? void 0 : _sorted$.Time_of_Day) || '-';\n  }, [salesByTime]);\n\n  // Top 3 overall\n  const top3Overall = useMemo(() => {\n    const map = new Map();\n    for (const r of filtered) {\n      map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n    }\n    return Array.from(map.entries()).map(([name, total]) => ({\n      name,\n      total: Number(total.toFixed(2))\n    })).sort((a, b) => b.total - a.total).slice(0, 3);\n  }, [filtered]);\n\n  // Top 3 per time slot (for 3 mini charts)\n  const top3BySlot = useMemo(() => {\n    const res = {};\n    for (const slot of timeSlots) {\n      const map = new Map();\n      for (const r of filtered.filter(d => d.Time_of_Day === slot)) {\n        map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n      }\n      const arr = Array.from(map.entries()).map(([name, total]) => ({\n        name,\n        total: Number(total.toFixed(2))\n      })).sort((a, b) => b.total - a.total).slice(0, 3);\n      res[slot] = arr;\n    }\n    return res;\n  }, [filtered]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 min-h-screen space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-amber-900\",\n      children: \"Coffee Behavior Clustering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm opacity-70\",\n          children: \"Total Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi\",\n          children: formatMoney(totalSales)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm opacity-70\",\n          children: \"Total Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi\",\n          children: totalTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm opacity-70\",\n          children: \"Avg Sales Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi\",\n          children: formatMoney(avgValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm opacity-70\",\n          children: \"Peak Time of Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kpi\",\n          children: peakTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 89\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row gap-6 items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2 items-start w-full md:w-1/3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: \"Coffee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"border rounded-xl p-2 w-full\",\n            value: coffee,\n            onChange: e => setCoffee(e.target.value),\n            children: coffeeOptions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: opt,\n              children: opt\n            }, opt, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-3 w-full md:w-2/3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium\",\n              children: \"Month Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [\"From \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: minMonth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 46\n              }, this), \" to \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: maxMonth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-xs w-20\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"12\",\n                step: \"1\",\n                value: minMonth,\n                onChange: e => setMinMonth(Math.min(Number(e.target.value), maxMonth)),\n                className: \"w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-xs w-20\",\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"1\",\n                max: \"12\",\n                step: \"1\",\n                value: maxMonth,\n                onChange: e => setMaxMonth(Math.max(Number(e.target.value), minMonth)),\n                className: \"w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl mb-2\",\n        children: \"Sales by Time of Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: 320\n        },\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 320,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: salesByTime,\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"Time_of_Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 5\n            }, this), Object.keys(salesByTime[0] || {}).filter(key => key !== \"Time_of_Day\").map(key => /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: key,\n              fill: coffeeColors[key] || \"#C4A484\",\n              radius: [8, 8, 0, 0]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 9\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-2\",\n          children: \"Top 3 Coffee Sales (Filtered)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Coffee Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Sales\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: top3Overall.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: r.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatMoney(r.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 46\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-4\",\n          children: \"Time-of-Day Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time of Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sales\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Transactions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 58\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Avg / Txn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: ['Morning', 'Afternoon', 'Night'].map(slot => {\n              const slotRows = filtered.filter(d => d.Time_of_Day === slot);\n              const s = slotRows.reduce((a, b) => a + b.sales, 0);\n              const t = new Set(slotRows.map(d => d.transaction_id)).size;\n              const avg = t ? s / t : 0;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: slot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatMoney(s)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 54\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: t\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 79\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatMoney(avg)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 91\n                }, this)]\n              }, slot, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-3 gap-4\",\n      children: timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-2\",\n          children: [slot, \": Top 3 Best Sellers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: 240\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: top3BySlot[slot],\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"total\",\n                radius: [8, 8, 0, 0],\n                children: top3BySlot[slot].map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: coffeeColors[entry.name] || \"#C4A484\"\n                }, `cell-${slot}-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, slot, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"text-xs opacity-60 pt-4\",\n      children: \"All visuals react to filters in real time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(CoffeeDashboard, \"5JTEHAu/xehh48omirl9CELMgZg=\");\n_c = CoffeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"CoffeeDashboard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","XLSX","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","coffeeColors","formatMoney","n","isFinite","toLocaleString","undefined","maximumFractionDigits","CoffeeDashboard","_s","raw","setRaw","coffee","setCoffee","minMonth","setMinMonth","maxMonth","setMaxMonth","fetch","then","r","arrayBuffer","ab","wb","read","type","ws","Sheets","SheetNames","json","utils","sheet_to_json","catch","e","console","error","data","map","d","get","keys","k","find","v","salesRaw","sales","parseFloat","toString","replace","Monthsort","Number","coffee_name","transaction_id","Time_of_Day","coffeeOptions","set","Set","filter","Boolean","Array","from","sort","filtered","coffeeOk","monthOk","totalSales","reduce","s","totalTransactions","size","avgValue","timeSlots","salesByTime","slot","slotSales","Sales","toFixed","peakTime","_sorted$","sorted","a","b","top3Overall","Map","entries","name","total","slice","top3BySlot","res","arr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","opt","min","max","step","Math","style","width","height","margin","top","right","left","bottom","dataKey","Object","key","fill","radius","i","slotRows","t","avg","entry","index","Cell","_c","$RefreshReg$"],"sources":["E:/Daffa/new project/Coffee Sales/src/CoffeeDashboard.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n// ðŸŽ¨ Harmonized Coffee Color Palette\nconst coffeeColors = {\n  \"Americano\": \"#6F4E37\",            // deep espresso brown\n  \"Americano with Milk\": \"#A67B5B\",  // warm latte tone\n  \"Cappuccino\": \"#C4A484\",           // beige cappuccino foam\n  \"Cocoa\": \"#D2691E\",                // chocolate\n  \"Cortado\": \"#C68642\",              // caramel gold\n  \"Espresso\": \"#3E2723\",             // darkest roast\n  \"Hot Chocolate\": \"#8B4513\",        // rich cocoa\n  \"Latte\": \"#EED8AE\"                 // light milky beige\n};\n\n\nfunction formatMoney(n) {\n  if (!isFinite(n)) return '$0';\n  return '$' + n.toLocaleString(undefined, { maximumFractionDigits: 2 });\n}\n\nexport default function CoffeeDashboard() {\n  const [raw, setRaw] = useState([]);\n  const [coffee, setCoffee] = useState('All');\n  const [minMonth, setMinMonth] = useState(1);\n  const [maxMonth, setMaxMonth] = useState(12);\n\n  // load excel\n  useEffect(() => {\n    fetch('/Coffee_Sales_Cleaned.xlsx')\n      .then((r) => r.arrayBuffer())\n      .then((ab) => {\n        const wb = XLSX.read(ab, { type: 'array' });\n        const ws = wb.Sheets[wb.SheetNames[0]];\n        const json = XLSX.utils.sheet_to_json(ws);\n        setRaw(json);\n      })\n      .catch((e) => console.error('Excel load error', e));\n  }, []);\n\n  // normalize + filter\nconst data = useMemo(() => {\n  return raw.map((d) => {\n    const get = (keys) =>\n      keys.map((k) => d[k]).find((v) => v !== undefined && v !== null) || '';\n\n    const salesRaw = get(['Sales_amount', 'sales_amount', 'Sales Amount']);\n    const sales = parseFloat(salesRaw.toString().replace(/[$,\\\\s]/g, '')) || 0;\n    const Monthsort = Number(get(['Monthsort', 'Month Sort', 'monthsort', 'Month']));\n    const coffee_name = get(['coffee_name', 'Coffee Name', 'coffee']);\n    const transaction_id = get(['transaction_id', 'Transaction ID', 'transactio_id', 'id']);\n    const Time_of_Day = get(['Time_of_Day', 'Time of Day', 'time_of_day', 'Time']);\n    return { sales, Monthsort, coffee_name, transaction_id, Time_of_Day };\n  });\n}, [raw]);\n\n\n  const coffeeOptions = useMemo(() => {\n    const set = new Set(data.map(d => d.coffee_name).filter(Boolean));\n    return ['All', ...Array.from(set).sort()];\n  }, [data]);\n\n  const filtered = useMemo(() => {\n    return data.filter(d => {\n      const coffeeOk = coffee === 'All' || d.coffee_name === coffee;\n      const monthOk = d.Monthsort >= minMonth && d.Monthsort <= maxMonth;\n      return coffeeOk && monthOk;\n    });\n  }, [data, coffee, minMonth, maxMonth]);\n\n  // KPIs\n  const totalSales = useMemo(() => filtered.reduce((s, d) => s + d.sales, 0), [filtered]);\n  const totalTransactions = useMemo(() => new Set(filtered.map(d => d.transaction_id)).size, [filtered]);\n  const avgValue = totalTransactions ? totalSales / totalTransactions : 0;\n\n  // Sales by Time of Day\n  const timeSlots = ['Morning', 'Afternoon', 'Night'];\n  const salesByTime = useMemo(() => {\n    return timeSlots.map(slot => {\n      const slotSales = filtered.filter(d => d.Time_of_Day === slot).reduce((s, d) => s + d.sales, 0);\n      return { Time_of_Day: slot, Sales: Number(slotSales.toFixed(2)) };\n    });\n  }, [filtered]);\n\n  const peakTime = useMemo(() => {\n    const sorted = [...salesByTime].sort((a,b) => b.Sales - a.Sales);\n    return sorted[0]?.Time_of_Day || '-';\n  }, [salesByTime]);\n\n  // Top 3 overall\n  const top3Overall = useMemo(() => {\n    const map = new Map();\n    for (const r of filtered) {\n      map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n    }\n    return Array.from(map.entries())\n      .map(([name, total]) => ({ name, total: Number(total.toFixed(2)) }))\n      .sort((a,b) => b.total - a.total)\n      .slice(0,3);\n  }, [filtered]);\n\n  // Top 3 per time slot (for 3 mini charts)\n  const top3BySlot = useMemo(() => {\n    const res = {};\n    for (const slot of timeSlots) {\n      const map = new Map();\n      for (const r of filtered.filter(d => d.Time_of_Day === slot)) {\n        map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n      }\n      const arr = Array.from(map.entries())\n        .map(([name, total]) => ({ name, total: Number(total.toFixed(2)) }))\n        .sort((a,b) => b.total - a.total)\n        .slice(0,3);\n      res[slot] = arr;\n    }\n    return res;\n  }, [filtered]);\n\n  return (\n    <div className=\"p-6 min-h-screen space-y-6\">\n      <h1 className=\"text-3xl font-bold text-amber-900\">Coffee Behavior Clustering</h1>\n\n      {/* KPIs */}\n      <div className=\"grid md:grid-cols-4 gap-4\">\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Total Sales</div><div className=\"kpi\">{formatMoney(totalSales)}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Total Transactions</div><div className=\"kpi\">{totalTransactions}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Avg Sales Value</div><div className=\"kpi\">{formatMoney(avgValue)}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Peak Time of Day</div><div className=\"kpi\">{peakTime}</div></div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"card\">\n        <div className=\"flex flex-col md:flex-row gap-6 items-center justify-between\">\n          {/* Coffee */}\n          <div className=\"flex flex-col gap-2 items-start w-full md:w-1/3\">\n            <label className=\"text-sm font-medium\">Coffee Name</label>\n            <select\n              className=\"border rounded-xl p-2 w-full\"\n              value={coffee}\n              onChange={(e)=>setCoffee(e.target.value)}\n            >\n              {coffeeOptions.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n            </select>\n          </div>\n          {/* Month range */}\n          <div className=\"flex flex-col gap-3 w-full md:w-2/3\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium\">Month Range</span>\n              <span className=\"text-sm\">From <b>{minMonth}</b> to <b>{maxMonth}</b></span>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-xs w-20\">Start</label>\n                <input type=\"range\" min=\"1\" max=\"12\" step=\"1\" value={minMonth}\n                  onChange={(e)=> setMinMonth(Math.min(Number(e.target.value), maxMonth))}\n                  className=\"w-full\"/>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-xs w-20\">End</label>\n                <input type=\"range\" min=\"1\" max=\"12\" step=\"1\" value={maxMonth}\n                  onChange={(e)=> setMaxMonth(Math.max(Number(e.target.value), minMonth))}\n                  className=\"w-full\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Sales by Time of Day */}\n      <div className=\"card\">\n        <h2 className=\"text-xl mb-2\">Sales by Time of Day</h2>\n        <div style={{ width: '100%', height: 320 }}>\n<ResponsiveContainer width=\"100%\" height={320}>\n  <BarChart data={salesByTime} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n    <XAxis dataKey=\"Time_of_Day\" />\n    <YAxis />\n    <Tooltip />\n    <Legend />\n\n    {Object.keys(salesByTime[0] || {})\n      .filter((key) => key !== \"Time_of_Day\")\n      .map((key) => (\n        <Bar\n          key={key}\n          dataKey={key}\n          fill={coffeeColors[key] || \"#C4A484\"}\n          radius={[8, 8, 0, 0]}\n        />\n      ))}\n  </BarChart>\n</ResponsiveContainer>\n\n        </div>\n      </div>\n\n      {/* Top 3 Overall + Tables per slot */}\n      <div className=\"grid md:grid-cols-2 gap-4\">\n        <div className=\"card\">\n          <h2 className=\"text-lg mb-2\">Top 3 Coffee Sales (Filtered)</h2>\n          <table className=\"table\">\n            <thead><tr><th>Coffee Name</th><th>Total Sales</th></tr></thead>\n            <tbody>\n              {top3Overall.map((r, i) => (\n                <tr key={i}><td>{r.name}</td><td>{formatMoney(r.total)}</td></tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"card\">\n          <h2 className=\"text-lg mb-4\">Time-of-Day Metrics</h2>\n          <table className=\"table\">\n            <thead><tr><th>Time of Day</th><th>Sales</th><th>Transactions</th><th>Avg / Txn</th></tr></thead>\n            <tbody>\n              {['Morning','Afternoon','Night'].map(slot => {\n                const slotRows = filtered.filter(d => d.Time_of_Day === slot);\n                const s = slotRows.reduce((a,b)=>a+b.sales, 0);\n                const t = new Set(slotRows.map(d=>d.transaction_id)).size;\n                const avg = t? s/t : 0;\n                return <tr key={slot}><td>{slot}</td><td>{formatMoney(s)}</td><td>{t}</td><td>{formatMoney(avg)}</td></tr>\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Three small charts: top 3 per time slot */}\n      <div className=\"grid md:grid-cols-3 gap-4\">\n        {timeSlots.map(slot => (\n          <div key={slot} className=\"card\">\n            <h3 className=\"mb-2\">{slot}: Top 3 Best Sellers</h3>\n            <div style={{ width: '100%', height: 240 }}>\n              <ResponsiveContainer>\n                <BarChart data={top3BySlot[slot]}>\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"total\" radius={[8, 8, 0, 0]}>\n                    {top3BySlot[slot].map((entry, index) => (\n                      <Cell\n                        key={`cell-${slot}-${index}`}\n                        fill={coffeeColors[entry.name] || \"#C4A484\"}\n                      />\n                    ))}\n                  </Bar>\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <footer className=\"text-xs opacity-60 pt-4\">All visuals react to filters in real time.</footer>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}