{"ast":null,"code":"import React,{useEffect,useMemo,useState}from'react';import*as XLSX from'xlsx';import{BarChart,Bar,XAxis,YAxis,Tooltip,Legend,ResponsiveContainer,Cell}from'recharts';// ðŸŽ¨ Harmonized Coffee Color Palette\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const coffeeColors={\"Americano\":\"#6F4E37\",// deep espresso brown\n\"Americano with Milk\":\"#A67B5B\",// warm latte tone\n\"Cappuccino\":\"#C4A484\",// beige cappuccino foam\n\"Cocoa\":\"#D2691E\",// chocolate\n\"Cortado\":\"#C68642\",// caramel gold\n\"Espresso\":\"#3E2723\",// darkest roast\n\"Hot Chocolate\":\"#8B4513\",// rich cocoa\n\"Latte\":\"#EED8AE\"// light milky beige\n};function formatMoney(n){if(!isFinite(n))return'$0';return'$'+n.toLocaleString(undefined,{maximumFractionDigits:2});}export default function CoffeeDashboard(){const[raw,setRaw]=useState([]);const[coffee,setCoffee]=useState('All');const[minMonth,setMinMonth]=useState(1);const[maxMonth,setMaxMonth]=useState(12);// load excel\nuseEffect(()=>{fetch('/Coffee_Sales_Cleaned.xlsx').then(r=>r.arrayBuffer()).then(ab=>{const wb=XLSX.read(ab,{type:'array'});const ws=wb.Sheets[wb.SheetNames[0]];const json=XLSX.utils.sheet_to_json(ws);setRaw(json);}).catch(e=>console.error('Excel load error',e));},[]);// normalize + filter\nconst data=useMemo(()=>{return raw.map(d=>{const get=keys=>keys.map(k=>d[k]).find(v=>v!==undefined&&v!==null)||'';const salesRaw=get(['Sales_amount','sales_amount','Sales Amount']);const sales=parseFloat(salesRaw.toString().replace(/[$,\\\\s]/g,''))||0;const Monthsort=Number(get(['Monthsort','Month Sort','monthsort','Month']));const coffee_name=get(['coffee_name','Coffee Name','coffee']);const transaction_id=get(['transaction_id','Transaction ID','transactio_id','id']);const Time_of_Day=get(['Time_of_Day','Time of Day','time_of_day','Time']);return{sales,Monthsort,coffee_name,transaction_id,Time_of_Day};});},[raw]);const coffeeOptions=useMemo(()=>{const set=new Set(data.map(d=>d.coffee_name).filter(Boolean));return['All',...Array.from(set).sort()];},[data]);const filtered=useMemo(()=>{return data.filter(d=>{const coffeeOk=coffee==='All'||d.coffee_name===coffee;const monthOk=d.Monthsort>=minMonth&&d.Monthsort<=maxMonth;return coffeeOk&&monthOk;});},[data,coffee,minMonth,maxMonth]);// KPIs\nconst totalSales=useMemo(()=>filtered.reduce((s,d)=>s+d.sales,0),[filtered]);const totalTransactions=useMemo(()=>new Set(filtered.map(d=>d.transaction_id)).size,[filtered]);const avgValue=totalTransactions?totalSales/totalTransactions:0;// Sales by Time of Day\nconst timeSlots=['Morning','Afternoon','Night'];const salesByTime=useMemo(()=>{return timeSlots.map(slot=>{const slotSales=filtered.filter(d=>d.Time_of_Day===slot).reduce((s,d)=>s+d.sales,0);return{Time_of_Day:slot,Sales:Number(slotSales.toFixed(2))};});},[filtered]);const peakTime=useMemo(()=>{var _sorted$;const sorted=[...salesByTime].sort((a,b)=>b.Sales-a.Sales);return((_sorted$=sorted[0])===null||_sorted$===void 0?void 0:_sorted$.Time_of_Day)||'-';},[salesByTime]);// Top 3 overall\nconst top3Overall=useMemo(()=>{const map=new Map();for(const r of filtered){map.set(r.coffee_name,(map.get(r.coffee_name)||0)+r.sales);}return Array.from(map.entries()).map(_ref=>{let[name,total]=_ref;return{name,total:Number(total.toFixed(2))};}).sort((a,b)=>b.total-a.total).slice(0,3);},[filtered]);// Top 3 per time slot (for 3 mini charts)\nconst top3BySlot=useMemo(()=>{const res={};for(const slot of timeSlots){const map=new Map();for(const r of filtered.filter(d=>d.Time_of_Day===slot)){map.set(r.coffee_name,(map.get(r.coffee_name)||0)+r.sales);}const arr=Array.from(map.entries()).map(_ref2=>{let[name,total]=_ref2;return{name,total:Number(total.toFixed(2))};}).sort((a,b)=>b.total-a.total).slice(0,3);res[slot]=arr;}return res;},[filtered]);return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 min-h-screen space-y-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-amber-900\",children:\"Coffee Behavior Clustering\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid md:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm opacity-70\",children:\"Total Sales\"}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi\",children:formatMoney(totalSales)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm opacity-70\",children:\"Total Transactions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi\",children:totalTransactions})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm opacity-70\",children:\"Avg Sales Value\"}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi\",children:formatMoney(avgValue)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm opacity-70\",children:\"Peak Time of Day\"}),/*#__PURE__*/_jsx(\"div\",{className:\"kpi\",children:peakTime})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row gap-6 items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2 items-start w-full md:w-1/3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm font-medium\",children:\"Coffee Name\"}),/*#__PURE__*/_jsx(\"select\",{className:\"border rounded-xl p-2 w-full\",value:coffee,onChange:e=>setCoffee(e.target.value),children:coffeeOptions.map(opt=>/*#__PURE__*/_jsx(\"option\",{value:opt,children:opt},opt))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-3 w-full md:w-2/3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Month Range\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm\",children:[\"From \",/*#__PURE__*/_jsx(\"b\",{children:minMonth}),\" to \",/*#__PURE__*/_jsx(\"b\",{children:maxMonth})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-xs w-20\",children:\"Start\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1\",max:\"12\",step:\"1\",value:minMonth,onChange:e=>setMinMonth(Math.min(Number(e.target.value),maxMonth)),className:\"w-full\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-xs w-20\",children:\"End\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1\",max:\"12\",step:\"1\",value:maxMonth,onChange:e=>setMaxMonth(Math.max(Number(e.target.value),minMonth)),className:\"w-full\"})]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl mb-2\",children:\"Sales by Time of Day\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:320},children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:320,children:/*#__PURE__*/_jsxs(BarChart,{data:salesByTime,margin:{top:20,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"Time_of_Day\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),Object.keys(salesByTime[0]||{}).filter(key=>key!==\"Time_of_Day\").map(key=>/*#__PURE__*/_jsx(Bar,{dataKey:key,fill:coffeeColors[key]||\"#C4A484\",radius:[8,8,0,0]},key))]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg mb-2\",children:\"Top 3 Coffee Sales (Filtered)\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Coffee Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Sales\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:top3Overall.map((r,i)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:r.name}),/*#__PURE__*/_jsx(\"td\",{children:formatMoney(r.total)})]},i))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg mb-4\",children:\"Time-of-Day Metrics\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Time of Day\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Sales\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Transactions\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Avg / Txn\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:['Morning','Afternoon','Night'].map(slot=>{const slotRows=filtered.filter(d=>d.Time_of_Day===slot);const s=slotRows.reduce((a,b)=>a+b.sales,0);const t=new Set(slotRows.map(d=>d.transaction_id)).size;const avg=t?s/t:0;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:slot}),/*#__PURE__*/_jsx(\"td\",{children:formatMoney(s)}),/*#__PURE__*/_jsx(\"td\",{children:t}),/*#__PURE__*/_jsx(\"td\",{children:formatMoney(avg)})]},slot);})})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid md:grid-cols-3 gap-4\",children:timeSlots.map(slot=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"mb-2\",children:[slot,\": Top 3 Best Sellers\"]}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:240},children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(BarChart,{data:top3BySlot[slot],children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"total\",radius:[8,8,0,0],children:top3BySlot[slot].map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:coffeeColors[entry.name]||\"#C4A484\"},\"cell-\".concat(slot,\"-\").concat(index)))})]})})})]},slot))}),/*#__PURE__*/_jsx(\"footer\",{className:\"text-xs opacity-60 pt-4\",children:\"All visuals react to filters in real time.\"})]});}","map":{"version":3,"names":["React","useEffect","useMemo","useState","XLSX","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","Cell","jsx","_jsx","jsxs","_jsxs","coffeeColors","formatMoney","n","isFinite","toLocaleString","undefined","maximumFractionDigits","CoffeeDashboard","raw","setRaw","coffee","setCoffee","minMonth","setMinMonth","maxMonth","setMaxMonth","fetch","then","r","arrayBuffer","ab","wb","read","type","ws","Sheets","SheetNames","json","utils","sheet_to_json","catch","e","console","error","data","map","d","get","keys","k","find","v","salesRaw","sales","parseFloat","toString","replace","Monthsort","Number","coffee_name","transaction_id","Time_of_Day","coffeeOptions","set","Set","filter","Boolean","Array","from","sort","filtered","coffeeOk","monthOk","totalSales","reduce","s","totalTransactions","size","avgValue","timeSlots","salesByTime","slot","slotSales","Sales","toFixed","peakTime","_sorted$","sorted","a","b","top3Overall","Map","entries","_ref","name","total","slice","top3BySlot","res","arr","_ref2","className","children","value","onChange","target","opt","min","max","step","Math","style","width","height","margin","top","right","left","bottom","dataKey","Object","key","fill","radius","i","slotRows","t","avg","entry","index","concat"],"sources":["E:/Daffa/new project/Coffee Sales/src/CoffeeDashboard.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, Cell } from 'recharts';\n\n// ðŸŽ¨ Harmonized Coffee Color Palette\nconst coffeeColors = {\n  \"Americano\": \"#6F4E37\",            // deep espresso brown\n  \"Americano with Milk\": \"#A67B5B\",  // warm latte tone\n  \"Cappuccino\": \"#C4A484\",           // beige cappuccino foam\n  \"Cocoa\": \"#D2691E\",                // chocolate\n  \"Cortado\": \"#C68642\",              // caramel gold\n  \"Espresso\": \"#3E2723\",             // darkest roast\n  \"Hot Chocolate\": \"#8B4513\",        // rich cocoa\n  \"Latte\": \"#EED8AE\"                 // light milky beige\n};\n\n\nfunction formatMoney(n) {\n  if (!isFinite(n)) return '$0';\n  return '$' + n.toLocaleString(undefined, { maximumFractionDigits: 2 });\n}\n\nexport default function CoffeeDashboard() {\n  const [raw, setRaw] = useState([]);\n  const [coffee, setCoffee] = useState('All');\n  const [minMonth, setMinMonth] = useState(1);\n  const [maxMonth, setMaxMonth] = useState(12);\n\n  // load excel\n  useEffect(() => {\n    fetch('/Coffee_Sales_Cleaned.xlsx')\n      .then((r) => r.arrayBuffer())\n      .then((ab) => {\n        const wb = XLSX.read(ab, { type: 'array' });\n        const ws = wb.Sheets[wb.SheetNames[0]];\n        const json = XLSX.utils.sheet_to_json(ws);\n        setRaw(json);\n      })\n      .catch((e) => console.error('Excel load error', e));\n  }, []);\n\n  // normalize + filter\nconst data = useMemo(() => {\n  return raw.map((d) => {\n    const get = (keys) =>\n      keys.map((k) => d[k]).find((v) => v !== undefined && v !== null) || '';\n\n    const salesRaw = get(['Sales_amount', 'sales_amount', 'Sales Amount']);\n    const sales = parseFloat(salesRaw.toString().replace(/[$,\\\\s]/g, '')) || 0;\n    const Monthsort = Number(get(['Monthsort', 'Month Sort', 'monthsort', 'Month']));\n    const coffee_name = get(['coffee_name', 'Coffee Name', 'coffee']);\n    const transaction_id = get(['transaction_id', 'Transaction ID', 'transactio_id', 'id']);\n    const Time_of_Day = get(['Time_of_Day', 'Time of Day', 'time_of_day', 'Time']);\n    return { sales, Monthsort, coffee_name, transaction_id, Time_of_Day };\n  });\n}, [raw]);\n\n\n  const coffeeOptions = useMemo(() => {\n    const set = new Set(data.map(d => d.coffee_name).filter(Boolean));\n    return ['All', ...Array.from(set).sort()];\n  }, [data]);\n\n  const filtered = useMemo(() => {\n    return data.filter(d => {\n      const coffeeOk = coffee === 'All' || d.coffee_name === coffee;\n      const monthOk = d.Monthsort >= minMonth && d.Monthsort <= maxMonth;\n      return coffeeOk && monthOk;\n    });\n  }, [data, coffee, minMonth, maxMonth]);\n\n  // KPIs\n  const totalSales = useMemo(() => filtered.reduce((s, d) => s + d.sales, 0), [filtered]);\n  const totalTransactions = useMemo(() => new Set(filtered.map(d => d.transaction_id)).size, [filtered]);\n  const avgValue = totalTransactions ? totalSales / totalTransactions : 0;\n\n  // Sales by Time of Day\n  const timeSlots = ['Morning', 'Afternoon', 'Night'];\n  const salesByTime = useMemo(() => {\n    return timeSlots.map(slot => {\n      const slotSales = filtered.filter(d => d.Time_of_Day === slot).reduce((s, d) => s + d.sales, 0);\n      return { Time_of_Day: slot, Sales: Number(slotSales.toFixed(2)) };\n    });\n  }, [filtered]);\n\n  const peakTime = useMemo(() => {\n    const sorted = [...salesByTime].sort((a,b) => b.Sales - a.Sales);\n    return sorted[0]?.Time_of_Day || '-';\n  }, [salesByTime]);\n\n  // Top 3 overall\n  const top3Overall = useMemo(() => {\n    const map = new Map();\n    for (const r of filtered) {\n      map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n    }\n    return Array.from(map.entries())\n      .map(([name, total]) => ({ name, total: Number(total.toFixed(2)) }))\n      .sort((a,b) => b.total - a.total)\n      .slice(0,3);\n  }, [filtered]);\n\n  // Top 3 per time slot (for 3 mini charts)\n  const top3BySlot = useMemo(() => {\n    const res = {};\n    for (const slot of timeSlots) {\n      const map = new Map();\n      for (const r of filtered.filter(d => d.Time_of_Day === slot)) {\n        map.set(r.coffee_name, (map.get(r.coffee_name) || 0) + r.sales);\n      }\n      const arr = Array.from(map.entries())\n        .map(([name, total]) => ({ name, total: Number(total.toFixed(2)) }))\n        .sort((a,b) => b.total - a.total)\n        .slice(0,3);\n      res[slot] = arr;\n    }\n    return res;\n  }, [filtered]);\n\n  return (\n    <div className=\"p-6 min-h-screen space-y-6\">\n      <h1 className=\"text-3xl font-bold text-amber-900\">Coffee Behavior Clustering</h1>\n\n      {/* KPIs */}\n      <div className=\"grid md:grid-cols-4 gap-4\">\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Total Sales</div><div className=\"kpi\">{formatMoney(totalSales)}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Total Transactions</div><div className=\"kpi\">{totalTransactions}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Avg Sales Value</div><div className=\"kpi\">{formatMoney(avgValue)}</div></div>\n        <div className=\"card\"><div className=\"text-sm opacity-70\">Peak Time of Day</div><div className=\"kpi\">{peakTime}</div></div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"card\">\n        <div className=\"flex flex-col md:flex-row gap-6 items-center justify-between\">\n          {/* Coffee */}\n          <div className=\"flex flex-col gap-2 items-start w-full md:w-1/3\">\n            <label className=\"text-sm font-medium\">Coffee Name</label>\n            <select\n              className=\"border rounded-xl p-2 w-full\"\n              value={coffee}\n              onChange={(e)=>setCoffee(e.target.value)}\n            >\n              {coffeeOptions.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n            </select>\n          </div>\n          {/* Month range */}\n          <div className=\"flex flex-col gap-3 w-full md:w-2/3\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium\">Month Range</span>\n              <span className=\"text-sm\">From <b>{minMonth}</b> to <b>{maxMonth}</b></span>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-xs w-20\">Start</label>\n                <input type=\"range\" min=\"1\" max=\"12\" step=\"1\" value={minMonth}\n                  onChange={(e)=> setMinMonth(Math.min(Number(e.target.value), maxMonth))}\n                  className=\"w-full\"/>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <label className=\"text-xs w-20\">End</label>\n                <input type=\"range\" min=\"1\" max=\"12\" step=\"1\" value={maxMonth}\n                  onChange={(e)=> setMaxMonth(Math.max(Number(e.target.value), minMonth))}\n                  className=\"w-full\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Sales by Time of Day */}\n      <div className=\"card\">\n        <h2 className=\"text-xl mb-2\">Sales by Time of Day</h2>\n        <div style={{ width: '100%', height: 320 }}>\n<ResponsiveContainer width=\"100%\" height={320}>\n  <BarChart data={salesByTime} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n    <XAxis dataKey=\"Time_of_Day\" />\n    <YAxis />\n    <Tooltip />\n    <Legend />\n\n    {Object.keys(salesByTime[0] || {})\n      .filter((key) => key !== \"Time_of_Day\")\n      .map((key) => (\n        <Bar\n          key={key}\n          dataKey={key}\n          fill={coffeeColors[key] || \"#C4A484\"}\n          radius={[8, 8, 0, 0]}\n        />\n      ))}\n  </BarChart>\n</ResponsiveContainer>\n\n        </div>\n      </div>\n\n      {/* Top 3 Overall + Tables per slot */}\n      <div className=\"grid md:grid-cols-2 gap-4\">\n        <div className=\"card\">\n          <h2 className=\"text-lg mb-2\">Top 3 Coffee Sales (Filtered)</h2>\n          <table className=\"table\">\n            <thead><tr><th>Coffee Name</th><th>Total Sales</th></tr></thead>\n            <tbody>\n              {top3Overall.map((r, i) => (\n                <tr key={i}><td>{r.name}</td><td>{formatMoney(r.total)}</td></tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"card\">\n          <h2 className=\"text-lg mb-4\">Time-of-Day Metrics</h2>\n          <table className=\"table\">\n            <thead><tr><th>Time of Day</th><th>Sales</th><th>Transactions</th><th>Avg / Txn</th></tr></thead>\n            <tbody>\n              {['Morning','Afternoon','Night'].map(slot => {\n                const slotRows = filtered.filter(d => d.Time_of_Day === slot);\n                const s = slotRows.reduce((a,b)=>a+b.sales, 0);\n                const t = new Set(slotRows.map(d=>d.transaction_id)).size;\n                const avg = t? s/t : 0;\n                return <tr key={slot}><td>{slot}</td><td>{formatMoney(s)}</td><td>{t}</td><td>{formatMoney(avg)}</td></tr>\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Three small charts: top 3 per time slot */}\n      <div className=\"grid md:grid-cols-3 gap-4\">\n        {timeSlots.map(slot => (\n          <div key={slot} className=\"card\">\n            <h3 className=\"mb-2\">{slot}: Top 3 Best Sellers</h3>\n            <div style={{ width: '100%', height: 240 }}>\n              <ResponsiveContainer>\n                <BarChart data={top3BySlot[slot]}>\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"total\" radius={[8, 8, 0, 0]}>\n                    {top3BySlot[slot].map((entry, index) => (\n                      <Cell\n                        key={`cell-${slot}-${index}`}\n                        fill={coffeeColors[entry.name] || \"#C4A484\"}\n                      />\n                    ))}\n                  </Bar>\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <footer className=\"text-xs opacity-60 pt-4\">All visuals react to filters in real time.</footer>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}